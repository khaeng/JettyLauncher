<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.itcall.net</groupId>
	<artifactId>JettyLauncher</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>
	<description>
참조하는 라이브러리 파일들을 모두 풀어서 class파일들만 다시 빌드하여 통합한다.
소스가 혼재되어 있지만, Load할때는 빠르다.

Unpack all the referenced library files and re-build only the class files to integrate them.
Sources are mixed, but loading is fast.
</description>

	<properties>
		<main.class.name>com.itcall.net.JettyLauncher</main.class.name>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<maven.assembly.plugin.version>2.6</maven.assembly.plugin.version>
	</properties>

	<dependencies>
		<!-- JettyLauncher 시작. -->
<!-- 		<dependency> -->
<!-- 			<groupId>org.eclipse.jetty</groupId> -->
<!-- 			<artifactId>jetty-runner</artifactId> -->
<!-- 			<version>9.2.6.v20141205</version> -->
<!-- 		</dependency> -->
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty-runner</artifactId>
			<version>8.1.16.v20140903</version>
<!-- 			<exclusions> -->
<!-- 				<exclusion> -->
<!-- 					<groupId>org.eclipse.jetty</groupId> -->
<!-- 					<artifactId>jetty-servlet</artifactId> -->
<!-- 				</exclusion> -->
<!-- 				<exclusion> -->
<!-- 					<groupId>org.eclipse.jetty.orbit</groupId> -->
<!-- 					<artifactId>javax.servlet</artifactId> -->
<!-- 				</exclusion> -->
<!-- 				<exclusion> -->
<!-- 					<groupId>org.eclipse.jetty.orbit</groupId> -->
<!-- 					<artifactId>javax.servlet.jsp</artifactId> -->
<!-- 				</exclusion> -->
<!-- 				<exclusion> -->
<!-- 					<groupId>org.eclipse.jetty.orbit</groupId> -->
<!-- 					<artifactId>javax.servlet.jsp.jstl</artifactId> -->
<!-- 				</exclusion> -->
<!-- 			</exclusions> -->
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty-spring</artifactId>
			<version>8.1.16.v20140903</version>
		</dependency>
		<!-- JettyLauncher 끝. -->

<!-- <dependency> -->
<!--     <groupId>ch.qos.logback</groupId> -->
<!--     <artifactId>logback-classic</artifactId> -->
<!--     <version>1.1.3</version> -->
<!-- </dependency> -->

		<!-- servlet-api file control MultiPart or Part -->
<!-- 		<dependency> -->
<!-- 			<groupId>javax.servlet</groupId> -->
<!-- 			<artifactId>javax.servlet-api</artifactId> -->
<!-- 			<version>3.1.0</version> -->
<!-- 			<scope>system</scope> -->
<!-- 			<systemPath>${user.lib.url}/javax.servlet-api-3.1-b02.jar</systemPath> -->
<!-- 		</dependency> -->

	</dependencies>

<!-- 	<dependencies> -->
<!-- 		<dependency> -->
<!-- 			<groupId>${project.parent.groupId}</groupId> -->
<!-- 			<artifactId>WarWebBase</artifactId> -->
<!-- 			<version>1.0.0</version> -->
<!-- 			<scope>system</scope> -->
<!-- 			<systemPath>${basedir}/../WarWebBase/target/Some-WebApp.war</systemPath> -->
<!-- 		</dependency> -->
<!-- 	</dependencies> -->

	<build>

<!-- 		<finalName>jettyLauncher</finalName> -->

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
					<optimize>true</optimize>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
<!-- 					<outputDirectory>${project.basedir}</outputDirectory> -->
					<outputDirectory>${project.build.directory}</outputDirectory>
					<archive>
						<manifest>
							<mainClass>${main.class.name}</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<inherited>false</inherited>
				<executions>
					<execution>
						<id>copy-src-jar</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<inherited>false</inherited>
						<configuration>
							<!-- copy명령의 한글이 깨질경우 : Run => Run Configurations... => 외쪽에 해당 Maven Build 선택 => 오른쪽 Common 탭 선택 => Encoding => Other => ms949 선택(입력) -->
							<workingDirectory>${project.build.directory}</workingDirectory>
							<executable>cmd</executable>
							<arguments>
								<argument>/C</argument>
								<argument>copy</argument>
								<argument>${project.name}-${project.version}-jar-with-dependencies.jar</argument>
								<argument>${project.basedir}\${project.name}.jar</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>

	<developers>
		<developer>
			<id>khaeng</id>
			<name>KUEE HAENG LEE</name>
			<email>khaeng@nate.com</email>
			<organization>com.itcall</organization>
			<organizationUrl>http://www.itcall.co.kr/</organizationUrl>
			<url>http://www.itcall.co.kr/</url>
			<roles>
				<role>Just Funny developer</role>
			</roles>
		</developer>
	</developers>

</project>